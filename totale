
// // /readline_hdc

// char	*append_cmd_to_buffer(char *cmd, char *buffer)
// {
// 	if (!buffer)
// 		buffer = ft_strdup("");
// 	if (!cmd)
// 		cmd = ft_strdup("");
// 	buffer = ft_strjoin(buffer, cmd);
// 	buffer = ft_strjoin(buffer, ft_strdup("\n"));
// 	return (buffer);
// }

// char	*get_string_exp(char *str, char *new_var)
// {
// 	char	*new;
// 	int		j;
// 	size_t	len;
// 	int		i;

// 	len = ft_strlen(str) + ft_strlen(new_var);
// 	new = (char *)ft_malloc(len + 1, ALLOC);
// 	i = ft_strcpy(new, str);
// 	while (str[i] && str[i] != '$')
// 	{
// 		new[i] = str[i];
// 		i++;
// 	}
// 	while (str[i] && str[i] == '$')
// 	{
// 		if (str[i + 1] != '$')
// 			break ;
// 		new[i] = str[i];
// 		i++;
// 	}
// 	j = 0;
// 	while (new_var && new_var[j])
// 		new[i++] = new_var[j++];
// 	return (new[i] = '\0', new);
// }

// char	*get_str_env(t_expand *env, char *str_var)
// {
// 	while (env && str_var)
// 	{
// 		if (!ft_strcmp(env->key, str_var))
// 			return (env->value);
// 		env = env->next;
// 	}
// 	return (NULL);
// }
// char	*ft_get_var(char *str_var)
// {
// 	int	i;
// 	int	start;

// 	i = 0;
// 	start = 0;
// 	if (str_var[i] >= '0' && str_var[i] <= '9')
// 		return (ft_substr(str_var, i, 1));
// 	while (str_var[i] && (ft_isalnum(str_var[i]) || str_var[i] == '_'))
// 		i++;
// 	return (ft_substr(str_var, start, i));
// }

// char	*get_var_odd(char *str_var, t_expand *env)
// {
// 	char	*get_var;
// 	char	*str_exp;

// 	get_var = NULL;
// 	str_exp = NULL;
// 	get_var = ft_get_var(str_var);
// 	if (get_var[0])
// 		str_exp = get_str_env(env, get_var);
// 	else
// 		str_exp = ft_strdup("$");
// 	return (str_exp);
// }

// char	*expand_string_variables(char *str_var, char *str_exp,
// 	int exit_status, t_expand *env)
// {
// 	int	i;
// 	int	count;
// 	int	len;

// 	(1) && (i = -1, len = ft_strlen(str_var));
// 	while (++i < len)
// 	{
// 		if (str_var[i] == '$' && str_var[i + 1] == '?')
// 		{
// 			str_exp = ft_itoa(exit_status);
// 			break ;
// 		}
// 		if (str_var[i] == '$')
// 		{
// 			count = i;
// 			while (str_var[i] && str_var[i] == '$')
// 				i++;
// 			count = i - count;
// 			if (count % 2 != 0)
// 				str_exp = get_var_odd(str_var + i, env);
// 			else
// 				str_exp = ft_strjoin("$", ft_get_var(str_var + i));
// 		}
// 	}
// 	return (get_string_exp(str_var, str_exp));
// }
// char	*ft_str_exp_double_q(char *str_var, t_expand *env, int exit_status)
// {
// 	char	*str_exp;

// 	str_exp = NULL;
// 	return (expand_string_variables(str_var, str_exp, exit_status, env));
// }

// char	*get_until_var_exp(char *str_var)
// {
// 	int	i;
// 	int	start;

// 	(1) && (i = 0, start = 0);
// 	while (str_var[i])
// 	{
// 		if (str_var[i] == '$')
// 		{
// 			if (str_var[i] == '$' && str_var[i + 1] == '$')
// 				return (ft_substr(str_var, start, i + 2));
// 			if (str_var[i] == '$' && str_var[i + 1] == '?')
// 				return (ft_substr(str_var, start, i + 2));
// 			i++;
// 			if (str_var[i] >= '0' && str_var[i] <= '9')
// 			{
// 				i++;
// 				break ;
// 			}
// 			while (str_var[i] && (ft_isalnum(str_var[i]) || str_var[i] == '_'))
// 				i++;
// 			break ;
// 		}
// 		i++;
// 	}
// 	return (ft_substr(str_var, start, i));
// }


// char	*expand_heredoc(char *cmd, t_expand *env, int exit_status)
// {
// 	char	*buffer;
// 	int		i;
// 	char	*str_var;
// 	char	*str_exp;

// 	i = 0;
// 	buffer = NULL;
// 	while (cmd[i])
// 	{
// 		str_var = get_until_var_exp(cmd + i);
// 		str_exp = ft_str_exp_double_q(str_var, env, exit_status);
// 		if (!buffer)
// 			buffer = ft_strdup("");
// 		buffer = ft_strjoin(buffer, str_exp);
// 		i += ft_strlen(str_var);
// 	}
// 	return (buffer);
// }


// {
// 	char	*file_tmp;
// 	int		i;
// 	int		fd_read;
// 	int		fd;

// 	file_tmp = ft_strdup(".heredoc");
// 	i = 0;
// 	while (access(file_tmp, F_OK) != -1)
// 		file_tmp = ft_strjoin(".heredoc", ft_itoa(i++));
// 	fd = open(file_tmp, O_CREAT | O_RDWR | O_APPEND, 0777);
// 	fd_read = open(file_tmp, O_RDWR | O_APPEND, 0777);
// 	ft_close_fds(fd_read, OPEN);
// 	if (fd < 0)
// 		write(2, "Error\n", 6);
// 	if (fd_read < 0)
// 		write(2, "Error\n", 6);
// 	write(fd, buffer, ft_strlen(buffer));
// 	close(fd);
// 	unlink(file_tmp);
// 	return (fd_read);
// }

// void	ft_sig_handler_her_doc(int sig)
// {
// 	if (sig == SIGINT)
// 		close(0);
// }

// int	ft_readline(int flag, char *dlmtr, t_expand *env, int *exit_status)
// {
// 	char	*buffer;
// 	char	*cmd;
// 	char	*free_cmd;

// 	buffer = NULL;
// 	signal(SIGINT, ft_sig_handler_her_doc);
// 	while (1)
// 	{
// 		cmd = readline("> ");
// 		free_cmd = cmd;
// 		if (!ttyname(0))
// 			return (free(free_cmd), open(ttyname(2), O_RDWR), -3);
// 		if (!cmd)
// 			return (write_to_file(buffer));
// 		if (!ft_strcmp(cmd, dlmtr))
// 		{
// 			free(free_cmd);
// 			break ;
// 		}
// 		if (flag != 1337)
// 			cmd = expand_heredoc(cmd, env, *exit_status);
// 		buffer = append_cmd_to_buffer(cmd, buffer);
// 		free(free_cmd);
// 	}
// 	return (write_to_file(buffer));
// }

// int	readline_hdc(char *dlmtr, t_expand *env, int flag, int *exit_status)
// {
// 	char	*buffer;

// 	buffer = NULL;
// 	return (ft_readline(flag, dlmtr, env, exit_status));
// }


// //process_next_string

// int	is_string_type(int type)
// {
// 	return (type == STRING
// 		|| type == SINGLE_Q
// 		|| type == DOUBLE_Q
// 		|| type == VAR
// 		|| type == DOUBLE_DLR
// 		|| type == EXIT_STATUS);
// }

// char	*process_next_string(t_token_node **head, int *flag)
// {
// 	t_token_node	*tmp;
// 	char			*buffer;

// 	buffer = NULL;
// 	tmp = (*head)->next;
// 	if (tmp && tmp->type == SPC)
// 		tmp = tmp->next;
// 	while (tmp && is_string_type(tmp->type))
// 	{
// 		if (!(*flag) && (tmp->type == SINGLE_Q || tmp->type == DOUBLE_Q))
// 			*flag = 1337;
// 		if (!buffer)
// 			buffer = ft_strdup("");
// 		buffer = ft_strjoin(buffer, tmp->value);
// 		tmp = tmp->next;
// 	}
// 	return (buffer);
// }

// // ft_heredoc
// void	ft_heredoc(t_token_node *head, t_expand *env, int *exit_status)
// {
// 	char	*buffer;
// 	int		flag;

// 	flag = 0;
// 	buffer = NULL;
// 	while (head)
// 	{
// 		if (head->type == HEREDOC)
// 		{
// 			buffer = process_next_string(&head, &flag);
// 			if (!buffer)
// 				return ;
// 			head->fd_hrd = readline_hdc(buffer, env, flag, exit_status);
// 			if (head->fd_hrd == -3)
// 			{
// 				*exit_status = 1;
// 				head->fd_hrd = -3;
// 				return ;
// 			}
// 			buffer = NULL;
// 		}
// 		head = head->next;
// 	}
// }
